"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[3100],{15680:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>p,MDXProvider:()=>d,mdx:()=>y,useMDXComponents:()=>u,withMDXComponents:()=>m});var r=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),m=function(e){return function(t){var n=u(t.components);return r.createElement(e,i({},t,{components:n}))}},u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,f=m["".concat(a,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},93100:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(58168),o=(n(96540),n(15680));const i={id:"import-resolution",title:"Import Resolution",slug:"/import-resolution",description:"How Pyrefly finds and resolves imports"},a="Import Resolution",l={unversionedId:"import-resolution",id:"import-resolution",title:"Import Resolution",description:"How Pyrefly finds and resolves imports",source:"@site/docs/import-resolution.md",sourceDirName:".",slug:"/import-resolution",permalink:"/en/docs/import-resolution",draft:!1,editUrl:"https://github.com/facebook/pyrefly/edit/main/website/docs/import-resolution.md",tags:[],version:"current",frontMatter:{id:"import-resolution",title:"Import Resolution",slug:"/import-resolution",description:"How Pyrefly finds and resolves imports"}},s={},p=[{value:"Relative Imports",id:"relative-imports",level:2},{value:"Absolute Imports",id:"absolute-imports",level:2}],m={toc:p};function u(e){let{components:t,...n}=e;return(0,o.mdx)("wrapper",(0,r.A)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"import-resolution"},"Import Resolution"),(0,o.mdx)("p",null,"This doc describes how imports in a given file are found and their bindings are\nresolved, including files that are being type checked."),(0,o.mdx)("p",null,"NOTE: see the ",(0,o.mdx)("a",{parentName:"p",href:"/en/docs/configuration"},"Configuration documentation")," for more info on\nthe config items referenced below."),(0,o.mdx)("h2",{id:"relative-imports"},"Relative Imports"),(0,o.mdx)("p",null,"If the import is relative (starting with one or more dots), the import is\nresolved relative to the path of the file importing it. A single dot at the\nbeginning of the import (e.g. ",(0,o.mdx)("inlineCode",{parentName:"p"},".file.to.import"),") represents the current\ndirectory, and more dots (e.g. ",(0,o.mdx)("inlineCode",{parentName:"p"},"..other.file"),") will continue to walk upward."),(0,o.mdx)("h2",{id:"absolute-imports"},"Absolute Imports"),(0,o.mdx)("p",null,"For absolute imports, Pyrefly uses the following import strategy:"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},"Try to import from each entry in ",(0,o.mdx)("inlineCode",{parentName:"li"},"import_roots")," in the order they appear\nusing the module finding strategy. a. NOTE: we append the config file's\ndirectory to ",(0,o.mdx)("inlineCode",{parentName:"li"},"search_roots")," automatically when using a config file as a\nsensible last-resort for attempting an import."),(0,o.mdx)("li",{parentName:"ol"},"Try to import from ",(0,o.mdx)("inlineCode",{parentName:"li"},"typeshed"),"."),(0,o.mdx)("li",{parentName:"ol"},"Try to import from each entry in ",(0,o.mdx)("inlineCode",{parentName:"li"},"site_package_path")," in the order it appears\nusing the module finding strategy."),(0,o.mdx)("li",{parentName:"ol"},"Return an import error.")),(0,o.mdx)("h1",{id:"stub-files-vs-source-files"},"Stub Files vs Source Files"),(0,o.mdx)("p",null,"A\n",(0,o.mdx)("a",{parentName:"p",href:"https://typing.python.org/en/latest/spec/distributing.html#stub-files"},"stub file"),"\nis any file that ends with a ",(0,o.mdx)("inlineCode",{parentName:"p"},".pyi")," file suffix. They have many uses, including\nadding typing to non-Python extension code, distributing typing information\nseparate from implementation, or overriding an implementation with more accurate\ntyping information."),(0,o.mdx)("p",null,"Pyrefly loads typing information from imports by first searching for a relevant\n",(0,o.mdx)("inlineCode",{parentName:"p"},".pyi")," file, then falling back to a ",(0,o.mdx)("inlineCode",{parentName:"p"},".py")," file, for each attempt at an import\nabove."))}u.isMDXComponent=!0}}]);