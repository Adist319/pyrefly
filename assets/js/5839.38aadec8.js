"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[5839],{65839:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"import-resolution","title":"Import Resolution","description":"How Pyrefly finds and resolves imports","source":"@site/docs/import-resolution.mdx","sourceDirName":".","slug":"/import-resolution","permalink":"/en/docs/import-resolution","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/pyrefly/edit/main/website/docs/import-resolution.mdx","tags":[],"version":"current","frontMatter":{"title":"Import Resolution","slug":"/import-resolution","description":"How Pyrefly finds and resolves imports"},"sidebar":"docsSidebar","previous":{"title":"Error Kinds","permalink":"/en/docs/error-kinds"}}');var n=t(74848),o=t(28453);const s={title:"Import Resolution",slug:"/import-resolution",description:"How Pyrefly finds and resolves imports"},l="Import Resolution",a={},d=[{value:"Relative Imports",id:"relative-imports",level:2},{value:"Absolute Imports",id:"absolute-imports",level:2}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"import-resolution",children:"Import Resolution"})}),"\n",(0,n.jsx)(i.p,{children:"This doc describes how imports in a given file are found and their bindings are\nresolved, including files that are being type checked."}),"\n",(0,n.jsxs)(i.p,{children:["NOTE: see the ",(0,n.jsx)(i.a,{href:"/en/docs/configuration",children:"Configuration documentation"})," for more info on\nthe config items referenced below."]}),"\n",(0,n.jsx)(i.h2,{id:"relative-imports",children:"Relative Imports"}),"\n",(0,n.jsxs)(i.p,{children:["If the import is relative (starting with one or more dots), the import is\nresolved relative to the path of the file importing it. A single dot at the\nbeginning of the import (e.g. ",(0,n.jsx)(i.code,{children:".file.to.import"}),") represents the current\ndirectory, and more dots (e.g. ",(0,n.jsx)(i.code,{children:"..other.file"}),") will continue to walk upward."]}),"\n",(0,n.jsx)(i.h2,{id:"absolute-imports",children:"Absolute Imports"}),"\n",(0,n.jsx)(i.p,{children:"For absolute imports, Pyrefly uses the following import strategy:"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:["Try to import from each entry in ",(0,n.jsx)(i.code,{children:"import_roots"})," in the order they appear\nusing the module finding strategy. a. NOTE: we append the config file's\ndirectory to ",(0,n.jsx)(i.code,{children:"search_roots"})," automatically when using a config file as a\nsensible last-resort for attempting an import."]}),"\n",(0,n.jsxs)(i.li,{children:["Try to import from ",(0,n.jsx)(i.code,{children:"typeshed"}),"."]}),"\n",(0,n.jsxs)(i.li,{children:["Try to import from each entry in ",(0,n.jsx)(i.code,{children:"site_package_path"})," in the order it appears\nusing the module finding strategy."]}),"\n",(0,n.jsx)(i.li,{children:"Return an import error."}),"\n"]}),"\n",(0,n.jsx)(i.h1,{id:"stub-files-vs-source-files",children:"Stub Files vs Source Files"}),"\n",(0,n.jsxs)(i.p,{children:["A\n",(0,n.jsx)(i.a,{href:"https://typing.python.org/en/latest/spec/distributing.html#stub-files",children:"stub file"}),"\nis any file that ends with a ",(0,n.jsx)(i.code,{children:".pyi"})," file suffix. They have many uses, including\nadding typing to non-Python extension code, distributing typing information\nseparate from implementation, or overriding an implementation with more accurate\ntyping information."]}),"\n",(0,n.jsxs)(i.p,{children:["Pyrefly loads typing information from imports by first searching for a relevant\n",(0,n.jsx)(i.code,{children:".pyi"})," file, then falling back to a ",(0,n.jsx)(i.code,{children:".py"})," file, for each attempt at an import\nabove."]})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);