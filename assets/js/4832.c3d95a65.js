"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[4832],{64832:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>D,contentTitle:()=>N,default:()=>I,frontMatter:()=>F,metadata:()=>r,toc:()=>$});const r=JSON.parse('{"id":"index","title":"Documentation","description":"Guides and references for all you need to know about Pyrefly","source":"@site/docs/index.mdx","sourceDirName":".","slug":"/","permalink":"/en/docs/","draft":false,"unlisted":false,"editUrl":"https://www.internalfb.com/intern/diffusion/FBS/browsefile/master/fbcode/pyrefly/website/docs/fb/index.md","tags":[],"version":"current","frontMatter":{"title":"Documentation","description":"Guides and references for all you need to know about Pyrefly","custom_edit_url":"https://www.internalfb.com/intern/diffusion/FBS/browsefile/master/fbcode/pyrefly/website/docs/fb/index.md"}}');var o=n(74848),s=n(28453),i=(n(96540),n(18215)),l=n(93751),c=n(56289),a=n(81430),d=n(22887),u=n(50539),f=n(9303);const m={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function p(e){let{href:t,children:n}=e;return(0,o.jsx)(c.default,{href:t,className:(0,i.A)("card padding--lg",m.cardContainer),children:n})}function h(e){let{href:t,icon:n,title:r,description:s}=e;return(0,o.jsxs)(p,{href:t,children:[(0,o.jsxs)(f.A,{as:"h2",className:(0,i.A)("text--truncate",m.cardTitle),title:r,children:[n," ",r]}),s&&(0,o.jsx)("p",{className:(0,i.A)("text--truncate",m.cardDescription),title:s,children:s})]})}function y(e){let{item:t}=e;const n=(0,l.Nr)(t),r=function(){const{selectMessage:e}=(0,a.W)();return t=>e(t,(0,u.translate)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return n?(0,o.jsx)(h,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??r(t.items.length)}):null}function b(e){let{item:t}=e;const n=(0,d.A)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",r=(0,l.cC)(t.docId??void 0);return(0,o.jsx)(h,{href:t.href,icon:n,title:t.label,description:t.description??r?.description})}function g(e){let{item:t}=e;switch(t.type){case"link":return(0,o.jsx)(b,{item:t});case"category":return(0,o.jsx)(y,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function w(e){let{className:t}=e;const n=(0,l.$S)();return(0,o.jsx)(x,{items:n.items,className:t})}function x(e){const{items:t,className:n}=e;if(!t)return(0,o.jsx)(w,{...e});const r=(0,l.d1)(t);return(0,o.jsx)("section",{className:(0,i.A)("row",n),children:r.map(((e,t)=>(0,o.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,o.jsx)(g,{item:e})},t)))})}const j=[...(0,n(78191).fbInternalOnly)([{type:"doc",id:"fb/getting-started",label:"[Internal Only] Getting Started"},{type:"doc",id:"fb/installation",label:"[Internal Only] Installation"}]),{type:"doc",id:"configuration",label:"Configuration"},{type:"doc",id:"learn-python-typing",label:"Learn Python Typing"},{type:"doc",id:"error-kinds",label:"Error Kinds"},{type:"doc",id:"import-resolution",label:"Import Resolution"}],k=j.map((e=>{const t=e.label,n="doc"===e.type?e.id:e.items[0];let r=`/en/docs/${n}`;return r.endsWith("/index")&&(r=r.substring(0,r.length-6)),{type:"link",docId:n,href:r,label:t}})),F={title:"Documentation",description:"Guides and references for all you need to know about Pyrefly",custom_edit_url:"https://www.internalfb.com/intern/diffusion/FBS/browsefile/master/fbcode/pyrefly/website/docs/fb/index.md"},N=void 0,D={},$=[];function C(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Guides and references for all you need to know about Pyrefly."}),"\n","\n",(0,o.jsx)(x,{items:k})]})}function I(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(C,{...e})}):C(e)}},81430:(e,t,n)=>{n.d(t,{W:()=>a});var r=n(96540),o=n(40797);const s=["zero","one","two","few","many","other"];function i(e){return s.filter((t=>e.includes(t)))}const l={locale:"en",pluralForms:i(["one","other"]),select:e=>1===e?"one":"other"};function c(){const{i18n:{currentLocale:e}}=(0,o.default)();return(0,r.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:i(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),l}}),[e])}function a(){const e=c();return{selectMessage:(t,n)=>function(e,t,n){const r=e.split("|");if(1===r.length)return r[0];r.length>n.pluralForms.length&&console.error(`For locale=${n.locale}, a maximum of ${n.pluralForms.length} plural forms are expected (${n.pluralForms.join(",")}), but the message contains ${r.length}: ${e}`);const o=n.select(t),s=n.pluralForms.indexOf(o);return r[Math.min(s,r.length-1)]}(n,t,e)}}}}]);